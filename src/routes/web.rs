use crate::app::controllers;
use crate::app::middlewares::web_auth::WebAuthMiddleware;
use actix_web::web;

pub fn register(cfg: &mut web::ServiceConfig) {
    cfg.service(
        web::resource("/")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::home::index)),
    );
    cfg.service(
        web::resource("/locale/switch").route(web::post().to(controllers::web::locale::switch)),
    );
    cfg.service(
        web::resource("/login")
            .route(web::get().to(controllers::web::auth::login::show))
            .route(web::post().to(controllers::web::auth::login::invoke)),
    );
    cfg.service(
        web::resource("/logout").route(web::post().to(controllers::web::auth::logout::invoke)),
    );
    cfg.service(
        web::resource("/register")
            .route(web::get().to(controllers::web::auth::register::show))
            .route(web::post().to(controllers::web::auth::register::invoke)),
    );
    cfg.service(
        web::resource("/reset-password")
            .route(web::get().to(controllers::web::auth::reset_password::show))
            .route(web::post().to(controllers::web::auth::reset_password::invoke)),
    );
    cfg.service(
        web::resource("/reset-password-confirm")
            .route(web::get().to(controllers::web::auth::reset_password_confirm::show))
            .route(web::post().to(controllers::web::auth::reset_password_confirm::invoke)),
    );
    cfg.service(
        web::resource(controllers::web::profile::get_url())
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::profile::index))
            .route(web::post().to(controllers::web::profile::update)),
    );
    //
    cfg.service(
        web::resource("/users")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::users::index::invoke))
            .route(web::post().to(controllers::web::users::mass_actions::invoke)),
    );
    cfg.service(
        web::resource("/users/create")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::users::create_update::create))
            .route(web::post().to(controllers::web::users::create_update::store)),
    );
    cfg.service(
        web::resource("/users/{user_id}")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::users::create_update::edit))
            .route(web::post().to(controllers::web::users::create_update::update)),
    );
    cfg.service(
        web::resource("/users/{user_id}/delete")
            .wrap(WebAuthMiddleware)
            .route(web::post().to(controllers::web::users::delete::invoke)),
    );
    //
    cfg.service(
        web::resource("/roles")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::roles::index::invoke))
            .route(web::post().to(controllers::web::roles::mass_actions::invoke)),
    );
    cfg.service(
        web::resource("/roles/create")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::roles::create_update::create))
            .route(web::post().to(controllers::web::roles::create_update::store)),
    );
    cfg.service(
        web::resource("/roles/{role_id}")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::roles::create_update::edit))
            .route(web::post().to(controllers::web::roles::create_update::update)),
    );
    cfg.service(
        web::resource("/roles/{role_id}/delete")
            .wrap(WebAuthMiddleware)
            .route(web::post().to(controllers::web::roles::delete::invoke)),
    );
    //
    cfg.service(
        web::resource("/files")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::files::index::invoke))
            .route(web::post().to(controllers::web::files::mass_actions::invoke)),
    );
    cfg.service(
        web::resource(controllers::web::files::upload::get_upload_url().as_str())
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::files::upload::show))
            .route(web::post().to(controllers::web::files::upload::upload)),
    );
    // cfg.service(
    //     web::resource("/files/{file_id}")
    //         .wrap(WebAuthMiddleware)
    //         .route(web::get().to(controllers::web::files::create::edit))
    //         .route(web::post().to(controllers::web::files::create::update)),
    // );
    cfg.service(
        web::resource("/files/{file_id}/delete")
            .wrap(WebAuthMiddleware)
            .route(web::post().to(controllers::web::files::delete::invoke)),
    );
    cfg.service(
        web::resource("/storage/files/{filename}")
            .wrap(WebAuthMiddleware)
            .route(web::get().to(controllers::web::files::public::invoke)),
    );
}
